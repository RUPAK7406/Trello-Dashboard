{"ast":null,"code":"import _defineProperty from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport { CONSTANTS } from \"../actions\";\nvar initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"myboard\"\n  }\n};\n\nvar boardsReducer = function boardsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST:\n      {\n        var _action$payload = action.payload,\n            boardID = _action$payload.boardID,\n            id = _action$payload.id;\n        var board = state[boardID];\n        var newListID = \"list-\".concat(id);\n        var newLists = [].concat(_toConsumableArray(board.lists), [newListID]);\n        board.lists = newLists;\n        return _objectSpread({}, state, _defineProperty({}, boardID, board));\n      }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      {\n        var _boardID = action.payload.boardID;\n        var _board = state[_boardID];\n        var lists = _board.lists;\n        var _action$payload2 = action.payload,\n            droppableIndexEnd = _action$payload2.droppableIndexEnd,\n            droppableIndexStart = _action$payload2.droppableIndexStart,\n            type = _action$payload2.type; // draggin lists around\n\n        if (type === \"list\") {\n          var pulledOutList = lists.splice(droppableIndexStart, 1);\n          lists.splice.apply(lists, [droppableIndexEnd, 0].concat(_toConsumableArray(pulledOutList)));\n          _board.lists = lists;\n          return _objectSpread({}, state, _defineProperty({}, _boardID, _board));\n        }\n\n        return state;\n      }\n\n    case CONSTANTS.DELETE_LIST:\n      {\n        var _action$payload3 = action.payload,\n            listID = _action$payload3.listID,\n            _boardID2 = _action$payload3.boardID;\n        var _board2 = state[_boardID2];\n        var _lists = _board2.lists;\n\n        var _newLists = _lists.filter(function (id) {\n          return id !== listID;\n        });\n\n        _board2.lists = _newLists;\n        return _objectSpread({}, state, _defineProperty({}, _boardID2, _board2));\n      }\n\n    case CONSTANTS.ADD_BOARD:\n      {\n        var _action$payload4 = action.payload,\n            title = _action$payload4.title,\n            _id = _action$payload4.id;\n        var newID = \"board-\".concat(_id);\n        var newBoard = {\n          id: newID,\n          title: title,\n          lists: []\n        };\n        return _objectSpread({}, state, _defineProperty({}, newID, newBoard));\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;","map":{"version":3,"sources":["D:\\tnew\\src\\reducers\\boardsReducer.js"],"names":["CONSTANTS","initialState","id","lists","title","boardsReducer","state","action","type","ADD_LIST","payload","boardID","board","newListID","newLists","DRAG_HAPPENED","droppableIndexEnd","droppableIndexStart","pulledOutList","splice","DELETE_LIST","listID","filter","ADD_BOARD","newID","newBoard"],"mappings":"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","sourcesContent":["import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"myboard\"\n  }\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n"]},"metadata":{},"sourceType":"module"}