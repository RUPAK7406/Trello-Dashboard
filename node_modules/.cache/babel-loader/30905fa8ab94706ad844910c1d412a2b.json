{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\tnew\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\tnew\\\\src\\\\components\\\\TrelloCreate.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      display: flex;\\n      align-items: center;\\n      cursor: pointer;\\n      border-radius: 3px;\\n      height: 36px;\\n      margin-left: 8px;\\n      width: 300px;\\n      padding-left: 10px;\\n      padding-right: 10px;\\n      opacity: \", \";\\n      color: \", \";\\n      background-color: \", \";\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nvar TrelloCreate =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(TrelloCreate, _React$PureComponent);\n\n  function TrelloCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TrelloCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TrelloCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formOpen: false,\n      text: \"\"\n    };\n\n    _this.openForm = function () {\n      _this.setState({\n        formOpen: true\n      });\n    };\n\n    _this.closeForm = function (e) {\n      _this.setState({\n        formOpen: false\n      });\n    };\n\n    _this.handleInputChange = function (e) {\n      _this.setState({\n        text: e.target.value\n      });\n    };\n\n    _this.handleAddList = function () {\n      var dispatch = _this.props.dispatch;\n      var text = _this.state.text;\n\n      if (text) {\n        _this.setState({\n          text: \"\"\n        });\n\n        dispatch(addList(text));\n      }\n\n      return;\n    };\n\n    _this.handleAddCard = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          listID = _this$props.listID;\n      var text = _this.state.text;\n\n      if (text) {\n        _this.setState({\n          text: \"\"\n        });\n\n        dispatch(addCard(listID, text));\n      }\n    };\n\n    _this.renderOpenForm = function () {\n      var list = _this.props.list;\n      var buttonText = list ? \"Add another list\" : \"Add another card\";\n      var buttonTextOpacity = list ? 1 : 0.5;\n      var buttonTextColor = list ? \"white\" : \"inherit\";\n      var buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n      var OpenFormButton = styled.div(_templateObject(), buttonTextOpacity, buttonTextColor, buttonTextBackground);\n      return React.createElement(OpenFormButton, {\n        onClick: _this.openForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"add\"), React.createElement(\"p\", {\n        style: {\n          flexShrink: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, buttonText));\n    };\n\n    return _this;\n  }\n\n  _createClass(TrelloCreate, [{\n    key: \"render\",\n    value: function render() {\n      var text = this.state.text;\n      var list = this.props.list;\n      return this.state.formOpen ? React.createElement(TrelloForm, {\n        text: text,\n        onChange: this.handleInputChange,\n        closeForm: this.closeForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(TrelloButton, {\n        onClick: list ? this.handleAddList : this.handleAddCard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, list ? \"Add List\" : \"Add Card\")) : React.createElement(TrelloOpenForm, {\n        list: list,\n        onClick: this.openForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, list ? \"Add another list\" : \"Add another card\");\n    }\n  }]);\n\n  return TrelloCreate;\n}(React.PureComponent);\n\nexport default connect()(TrelloCreate);","map":{"version":3,"sources":["D:\\tnew\\src\\components\\TrelloCreate.js"],"names":["React","Icon","TrelloButton","connect","addList","addCard","styled","TrelloForm","TrelloOpenForm","TrelloCreate","state","formOpen","text","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","dispatch","props","handleAddCard","listID","renderOpenForm","list","buttonText","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","div","flexShrink","PureComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n"]},"metadata":{},"sourceType":"module"}